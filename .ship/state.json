{
  "v1": {
    "config": null,
    "helmValues": "## Global Docker image registry\n## Please, note that this will override the image registry for all the images, including dependencies, configured to use the global value\n##\n# global:\n#   imageRegistry:\n\nimage:\n  ## Bitnami MongoDB registry\n  ##\n  registry: docker.io\n  ## Bitnami MongoDB image name\n  ##\n  repository: bitnami/mongodb\n  ## Bitnami MongoDB image tag\n  ## ref: https://hub.docker.com/r/bitnami/mongodb/tags/\n  ##\n  tag: 4.0.6\n\n  ## Specify a imagePullPolicy\n  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images\n  ##\n  pullPolicy: Always\n  ## Optionally specify an array of imagePullSecrets.\n  ## Secrets must be manually created in the namespace.\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n  ##\n  # pullSecrets:\n  #   - myRegistrKeySecretName\n\n  ## Set to true if you would like to see extra information on logs\n  ## It turns NAMI debugging in minideb\n  ## ref:  https://github.com/bitnami/minideb-extras/#turn-on-nami-debugging\n  debug: false\n\n## Enable authentication\n## ref: https://docs.mongodb.com/manual/tutorial/enable-authentication/\n#\nusePassword: true\n# existingSecret: name-of-existing-secret\n\n## MongoDB admin password\n## ref: https://github.com/bitnami/bitnami-docker-mongodb/blob/master/README.md#setting-the-root-password-on-first-run\n##\n# mongodbRootPassword:\n\n## MongoDB custom user and database\n## ref: https://github.com/bitnami/bitnami-docker-mongodb/blob/master/README.md#creating-a-user-and-database-on-first-run\n##\n# mongodbUsername: username\n# mongodbPassword: password\n# mongodbDatabase: database\n\n\n## Whether enable/disable IPv6 on MongoDB\n## ref: https://github.com/bitnami/bitnami-docker-mongodb/blob/master/README.md#enabling/disabling-ipv6\n##\nmongodbEnableIPv6: true\n\n## MongoDB System Log configuration\n## ref: https://github.com/bitnami/bitnami-docker-mongodb#configuring-system-log-verbosity-level\n##\nmongodbSystemLogVerbosity: 0\nmongodbDisableSystemLog: false\n\n## MongoDB additional command line flags\n##\n## Can be used to specify command line flags, for example:\n##\n## mongodbExtraFlags:\n##  - \"--wiredTigerCacheSizeGB=2\"\nmongodbExtraFlags: []\n\n## Pod Security Context\n## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/\n##\nsecurityContext:\n  enabled: true\n  fsGroup: 1001\n  runAsUser: 1001\n\n## Kubernetes Cluster Domain\nclusterDomain: cluster.local\n\n## Kubernetes service type\nservice:\n  annotations: {}\n  type: ClusterIP\n  # clusterIP: None\n  port: 27017\n\n  ## Specify the nodePort value for the LoadBalancer and NodePort service types.\n  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport\n  ##\n  # nodePort:\n\n## Setting up replication\n## ref: https://github.com/bitnami/bitnami-docker-mongodb#setting-up-a-replication\n#\nreplicaSet:\n  ## Whether to create a MongoDB replica set for high availability or not\n  enabled: false\n  useHostnames: true\n\n  ## Name of the replica set\n  ##\n  name: rs0\n\n  ## Key used for replica set authentication\n  ##\n  # key: key\n\n  ## Number of replicas per each node type\n  ##\n  replicas:\n    secondary: 1\n    arbiter: 1\n  ## Pod Disruption Budget\n  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/\n  pdb:\n    minAvailable:\n      primary: 1\n      secondary: 1\n      arbiter: 1\n\n# Annotations to be added to MongoDB pods\npodAnnotations: {}\n\n# Additional pod labels to apply\npodLabels: {}\n\n## Configure resource requests and limits\n## ref: http://kubernetes.io/docs/user-guide/compute-resources/\n##\nresources: {}\n# limits:\n#   cpu: 500m\n#   memory: 512Mi\n# requests:\n#   cpu: 100m\n#   memory: 256Mi\n\n## Pod priority\n## https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/\n# priorityClassName: \"\"\n\n## Node selector\n## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector\nnodeSelector: {}\n\n## Affinity\n## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity\naffinity: {}\n\n## Tolerations\n## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/\ntolerations: []\n\n## Enable persistence using Persistent Volume Claims\n## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/\n##\npersistence:\n  enabled: true\n  ## A manually managed Persistent Volume and Claim\n  ## Requires persistence.enabled: true\n  ## If defined, PVC must be created manually before volume will be bound\n  # existingClaim:\n\n  ## mongodb data Persistent Volume Storage Class\n  ## If defined, storageClassName: \u003cstorageClass\u003e\n  ## If set to \"-\", storageClassName: \"\", which disables dynamic provisioning\n  ## If undefined (the default) or set to null, no storageClassName spec is\n  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on\n  ##   GKE, AWS \u0026 OpenStack)\n  ##\n  # storageClass: \"-\"\n  accessModes:\n    - ReadWriteOnce\n  size: 8Gi\n  annotations: {}\n\n## Configure extra options for liveness and readiness probes\n## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)\nlivenessProbe:\n  enabled: true\n  initialDelaySeconds: 30\n  periodSeconds: 10\n  timeoutSeconds: 5\n  failureThreshold: 6\n  successThreshold: 1\nreadinessProbe:\n  enabled: true\n  initialDelaySeconds: 5\n  periodSeconds: 10\n  timeoutSeconds: 5\n  failureThreshold: 6\n  successThreshold: 1\n\n# Entries for the MongoDB config file\nconfigmap:\n#  # Where and how to store data.\n#  storage:\n#    dbPath: /opt/bitnami/mongodb/data/db\n#    journal:\n#      enabled: true\n#    #engine:\n#    #wiredTiger:\n#  # where to write logging data.\n#  systemLog:\n#    destination: file\n#    logAppend: true\n#    path: /opt/bitnami/mongodb/logs/mongodb.log\n#  # network interfaces\n#  net:\n#    port: 27017\n#    bindIp: 0.0.0.0\n#    unixDomainSocket:\n#      enabled: true\n#      pathPrefix: /opt/bitnami/mongodb/tmp\n#  # replica set options\n#  #replication:\n#  #  replSetName: replicaset\n#  # process management options\n#  processManagement:\n#     fork: false\n#     pidFilePath: /opt/bitnami/mongodb/tmp/mongodb.pid\n#  # set parameter options\n#  setParameter:\n#     enableLocalhostAuthBypass: true\n#  # security options\n#  security:\n#    authorization: enabled\n#    #keyFile: /opt/bitnami/mongodb/conf/keyfile\n\n## Prometheus Exporter / Metrics\n##\nmetrics:\n  enabled: false\n\n  image:\n    registry: docker.io\n    repository: forekshub/percona-mongodb-exporter\n    tag: latest\n    pullPolicy: IfNotPresent\n    ## Optionally specify an array of imagePullSecrets.\n    ## Secrets must be manually created in the namespace.\n    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n    ##\n    # pullSecrets:\n    #   - myRegistrKeySecretName\n\n  ## String with extra arguments to the metrics exporter\n  ## ref: https://github.com/dcu/mongodb_exporter/blob/master/mongodb_exporter.go\n  extraArgs: \"\"\n  ## Metrics exporter resource requests and limits\n  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/\n  ##\n  # resources: {}\n\n  ## Metrics exporter pod Annotation\n  podAnnotations:\n    prometheus.io/scrape: \"true\"\n    prometheus.io/port: \"9216\"\n\n  ## Prometheus Service Monitor\n  ## ref: https://github.com/coreos/prometheus-operator\n  ##      https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md\n  serviceMonitor:\n    ## If the operator is installed in your cluster, set to true to create a Service Monitor Entry\n    enabled: false\n    ## Used to pass Labels that are used by the Prometheus installed in your cluster to select Service Monitors to work with\n    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#prometheusspec\n    additionalLabels: {}\n\n    ## Specify Metric Relabellings to add to the scrape endpoint\n    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint\n    # relabellings:\n\n    alerting:\n      ## Define individual alerting rules as required\n      ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#rulegroup\n      ##      https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/\n      rules: {}\n\n      ## Used to pass Labels that are used by the Prometheus installed in your cluster to select Prometheus Rules to work with\n      ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#prometheusspec\n      additionalLabels: {}\n",
    "releaseName": "mongodb",
    "helmValuesDefaults": "## Global Docker image registry\n## Please, note that this will override the image registry for all the images, including dependencies, configured to use the global value\n##\n# global:\n#   imageRegistry:\n\nimage:\n  ## Bitnami MongoDB registry\n  ##\n  registry: docker.io\n  ## Bitnami MongoDB image name\n  ##\n  repository: bitnami/mongodb\n  ## Bitnami MongoDB image tag\n  ## ref: https://hub.docker.com/r/bitnami/mongodb/tags/\n  ##\n  tag: 4.0.6\n\n  ## Specify a imagePullPolicy\n  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images\n  ##\n  pullPolicy: Always\n  ## Optionally specify an array of imagePullSecrets.\n  ## Secrets must be manually created in the namespace.\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n  ##\n  # pullSecrets:\n  #   - myRegistrKeySecretName\n\n  ## Set to true if you would like to see extra information on logs\n  ## It turns NAMI debugging in minideb\n  ## ref:  https://github.com/bitnami/minideb-extras/#turn-on-nami-debugging\n  debug: false\n\n## Enable authentication\n## ref: https://docs.mongodb.com/manual/tutorial/enable-authentication/\n#\nusePassword: true\n# existingSecret: name-of-existing-secret\n\n## MongoDB admin password\n## ref: https://github.com/bitnami/bitnami-docker-mongodb/blob/master/README.md#setting-the-root-password-on-first-run\n##\n# mongodbRootPassword:\n\n## MongoDB custom user and database\n## ref: https://github.com/bitnami/bitnami-docker-mongodb/blob/master/README.md#creating-a-user-and-database-on-first-run\n##\n# mongodbUsername: username\n# mongodbPassword: password\n# mongodbDatabase: database\n\n\n## Whether enable/disable IPv6 on MongoDB\n## ref: https://github.com/bitnami/bitnami-docker-mongodb/blob/master/README.md#enabling/disabling-ipv6\n##\nmongodbEnableIPv6: true\n\n## MongoDB System Log configuration\n## ref: https://github.com/bitnami/bitnami-docker-mongodb#configuring-system-log-verbosity-level\n##\nmongodbSystemLogVerbosity: 0\nmongodbDisableSystemLog: false\n\n## MongoDB additional command line flags\n##\n## Can be used to specify command line flags, for example:\n##\n## mongodbExtraFlags:\n##  - \"--wiredTigerCacheSizeGB=2\"\nmongodbExtraFlags: []\n\n## Pod Security Context\n## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/\n##\nsecurityContext:\n  enabled: true\n  fsGroup: 1001\n  runAsUser: 1001\n\n## Kubernetes Cluster Domain\nclusterDomain: cluster.local\n\n## Kubernetes service type\nservice:\n  annotations: {}\n  type: ClusterIP\n  # clusterIP: None\n  port: 27017\n\n  ## Specify the nodePort value for the LoadBalancer and NodePort service types.\n  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport\n  ##\n  # nodePort:\n\n## Setting up replication\n## ref: https://github.com/bitnami/bitnami-docker-mongodb#setting-up-a-replication\n#\nreplicaSet:\n  ## Whether to create a MongoDB replica set for high availability or not\n  enabled: false\n  useHostnames: true\n\n  ## Name of the replica set\n  ##\n  name: rs0\n\n  ## Key used for replica set authentication\n  ##\n  # key: key\n\n  ## Number of replicas per each node type\n  ##\n  replicas:\n    secondary: 1\n    arbiter: 1\n  ## Pod Disruption Budget\n  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/\n  pdb:\n    minAvailable:\n      primary: 1\n      secondary: 1\n      arbiter: 1\n\n# Annotations to be added to MongoDB pods\npodAnnotations: {}\n\n# Additional pod labels to apply\npodLabels: {}\n\n## Configure resource requests and limits\n## ref: http://kubernetes.io/docs/user-guide/compute-resources/\n##\nresources: {}\n# limits:\n#   cpu: 500m\n#   memory: 512Mi\n# requests:\n#   cpu: 100m\n#   memory: 256Mi\n\n## Pod priority\n## https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/\n# priorityClassName: \"\"\n\n## Node selector\n## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector\nnodeSelector: {}\n\n## Affinity\n## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity\naffinity: {}\n\n## Tolerations\n## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/\ntolerations: []\n\n## Enable persistence using Persistent Volume Claims\n## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/\n##\npersistence:\n  enabled: true\n  ## A manually managed Persistent Volume and Claim\n  ## Requires persistence.enabled: true\n  ## If defined, PVC must be created manually before volume will be bound\n  # existingClaim:\n\n  ## mongodb data Persistent Volume Storage Class\n  ## If defined, storageClassName: \u003cstorageClass\u003e\n  ## If set to \"-\", storageClassName: \"\", which disables dynamic provisioning\n  ## If undefined (the default) or set to null, no storageClassName spec is\n  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on\n  ##   GKE, AWS \u0026 OpenStack)\n  ##\n  # storageClass: \"-\"\n  accessModes:\n    - ReadWriteOnce\n  size: 8Gi\n  annotations: {}\n\n## Configure extra options for liveness and readiness probes\n## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)\nlivenessProbe:\n  enabled: true\n  initialDelaySeconds: 30\n  periodSeconds: 10\n  timeoutSeconds: 5\n  failureThreshold: 6\n  successThreshold: 1\nreadinessProbe:\n  enabled: true\n  initialDelaySeconds: 5\n  periodSeconds: 10\n  timeoutSeconds: 5\n  failureThreshold: 6\n  successThreshold: 1\n\n# Entries for the MongoDB config file\nconfigmap:\n#  # Where and how to store data.\n#  storage:\n#    dbPath: /opt/bitnami/mongodb/data/db\n#    journal:\n#      enabled: true\n#    #engine:\n#    #wiredTiger:\n#  # where to write logging data.\n#  systemLog:\n#    destination: file\n#    logAppend: true\n#    path: /opt/bitnami/mongodb/logs/mongodb.log\n#  # network interfaces\n#  net:\n#    port: 27017\n#    bindIp: 0.0.0.0\n#    unixDomainSocket:\n#      enabled: true\n#      pathPrefix: /opt/bitnami/mongodb/tmp\n#  # replica set options\n#  #replication:\n#  #  replSetName: replicaset\n#  # process management options\n#  processManagement:\n#     fork: false\n#     pidFilePath: /opt/bitnami/mongodb/tmp/mongodb.pid\n#  # set parameter options\n#  setParameter:\n#     enableLocalhostAuthBypass: true\n#  # security options\n#  security:\n#    authorization: enabled\n#    #keyFile: /opt/bitnami/mongodb/conf/keyfile\n\n## Prometheus Exporter / Metrics\n##\nmetrics:\n  enabled: false\n\n  image:\n    registry: docker.io\n    repository: forekshub/percona-mongodb-exporter\n    tag: latest\n    pullPolicy: IfNotPresent\n    ## Optionally specify an array of imagePullSecrets.\n    ## Secrets must be manually created in the namespace.\n    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n    ##\n    # pullSecrets:\n    #   - myRegistrKeySecretName\n\n  ## String with extra arguments to the metrics exporter\n  ## ref: https://github.com/dcu/mongodb_exporter/blob/master/mongodb_exporter.go\n  extraArgs: \"\"\n  ## Metrics exporter resource requests and limits\n  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/\n  ##\n  # resources: {}\n\n  ## Metrics exporter pod Annotation\n  podAnnotations:\n    prometheus.io/scrape: \"true\"\n    prometheus.io/port: \"9216\"\n\n  ## Prometheus Service Monitor\n  ## ref: https://github.com/coreos/prometheus-operator\n  ##      https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md\n  serviceMonitor:\n    ## If the operator is installed in your cluster, set to true to create a Service Monitor Entry\n    enabled: false\n    ## Used to pass Labels that are used by the Prometheus installed in your cluster to select Service Monitors to work with\n    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#prometheusspec\n    additionalLabels: {}\n\n    ## Specify Metric Relabellings to add to the scrape endpoint\n    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint\n    # relabellings:\n\n    alerting:\n      ## Define individual alerting rules as required\n      ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#rulegroup\n      ##      https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/\n      rules: {}\n\n      ## Used to pass Labels that are used by the Prometheus installed in your cluster to select Prometheus Rules to work with\n      ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#prometheusspec\n      additionalLabels: {}\n",
    "upstream": "github.com/helm/charts/stable/mongodb",
    "metadata": {
      "applicationType": "helm",
      "icon": "https://bitnami.com/assets/stacks/mongodb/img/mongodb-stack-220x234.png",
      "name": "mongodb",
      "releaseNotes": "[stable/mongodb] make metrics exporter checks configurable (#11587)\n\nSigned-off-by: Abhishek Jaisingh \u003cabhi2254015@gmail.com\u003e",
      "version": "5.5.0"
    },
    "contentSHA": "2fc1af9181004be3358217b03b7b79de68fce75fe071514cb3d9f015cf5d1692",
    "lifecycle": {
      "stepsCompleted": {
        "intro": true,
        "kustomize": true,
        "kustomize-intro": true,
        "outro": true,
        "render": true,
        "values": true
      }
    }
  }
}